#include"STM32L4xx_hal.h"
#include <stdio.h>
#include <stdarg.h>


void debug_printf(const char *fmt, ...) {
  char buffer[256];
  va_list args;
  va_start(args, fmt);
  vsnprintf(buffer, sizeof(buffer), fmt, args);
  va_end(args);

  uint16_t i = 0;
  while(buffer[i] != '\0') {
    ITM_SendChar(buffer[i]);
    i++;
  }

}

uint32_t rx_counter,tx_counter;
uint8_t tx_buffer[10]={10,20,30,40,50,60,70,80,90,100};
uint8_t rx_buffer[10]={0};




void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart){
	tx_counter++;
}

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
	rx_counter++;
}

UART_HandleTypeDef huart2 ;

void usart_init(void);

char msg[20] = "Hello from stm32\r\n";

int main(void)
{
	HAL_Init();
	usart_init();

	HAL_UART_Transmit_IT(&huart2, tx_buffer , 10);
	HAL_UART_Receive_IT(&huart2, rx_buffer, 10);


	while(1){

	}
}



void usart_init(void){

	UART_HandleTypeDef huart2 ;

	GPIO_InitTypeDef GPIO_InitStruct ={0};

	//Enable UART pin clock access
	__HAL_RCC_GPIOA_CLK_ENABLE();

	//Enable UART module clock access
	__HAL_RCC_USART2_CLK_ENABLE();

	//Configure pins to act as alternate function pins(UART)

	GPIO_InitStruct.Pin  = GPIO_PIN_2|GPIO_PIN_3 ;
	GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
	GPIO_InitStruct.Alternate = GPIO_AF7_USART2 ;
	GPIO_InitStruct.Pull = GPIO_NOPULL ;
	GPIO_InitStruct.Speed=GPIO_SPEED_FREQ_HIGH;

	HAL_GPIO_Init(GPIOA , &GPIO_InitStruct);

	//Configure UART module

	huart2.Instance = USART1 ;
	huart2.Init.BaudRate = 115200 ;
	huart2.Init.WordLength = UART_WORDLENGTH_8B ;
	huart2.Init.Parity = UART_PARITY_NONE ;
	huart2.Init.Mode = UART_MODE_TX ;
	huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE ;
	huart2.Init.OverSampling = UART_OVERSAMPLING_16 ;

	HAL_UART_Init(&huart2);

	HAL_NVIC_SetPriority(USART1_IRQn ,0,0);
	HAL_NVIC_EnableIRQ(USART1_IRQn);



}




void USART1_IRQHandler(void){
	HAL_UART_IRQHandler(&huart2);
}


void SysTick_Handler(void)
{
	HAL_IncTick();
}

